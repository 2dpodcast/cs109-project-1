@mixin border-radius($value) {
    border-radius: #{$value};
    -webkit-border-radius: #{$value};
    -moz-border-radius: #{$value};
    behavior: url('/lib/PIE-1.0.0/PIE.php');
}

@mixin box-sizing($value) {
    -webkit-box-sizing: $value; /* Safari/Chrome, other WebKit */
    -moz-box-sizing: $value;    /* Firefox, other Gecko */
    box-sizing: $value;         /* Opera/IE 8+ */
}

@mixin box-shadow($value) {
    box-shadow: #{$value};
    behavior: url('/lib/PIE-1.0.0/PIE.php');
    -moz-box-shadow: #{$value};
    -webkit-box-shadow: #{$value};
}

@mixin background-color($value) {
    background-color: ie-hex-str($value);
    background-color: $value;
}

@mixin background-size($value) {
    -webkit-background-size: $value;
    -moz-background-size: $value;
    -o-background-size: $value;
    background-size: $value;
}

@mixin background-linear-gradient($direction, $first, $second) {
    background-image: -moz-linear-gradient($direction, $first, $second);
    background-image: -ms-linear-gradient($direction, $first, $second);
    background-image: -webkit-linear-gradient($direction, $first, $second);
    background-image: -o-linear-gradient($direction, $first, $second);
    background-image: linear-gradient($direction, $first, $second);
}

@mixin ie-gradient($direction, $first, $second) {
    $iefirst: ie-hex-str($first);
    $iesecond: ie-hex-str($second);
    @if $direction == 'top' {
        filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=#{$iefirst}, endColorstr=#{$iesecond},GradientType=0);
    } @else {
        filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=#{$iefirst}, endColorstr=#{$iesecond},GradientType=1);
    }
}

@mixin transition($value) {
    -webkit-transition: $value;
    -moz-transition: $value;
    -ms-transition: $value;
    -o-transition: $value;
    transition: $value;
}

@mixin user-select($value) {
    -webkit-user-select: $value;
    -ms-user-select: $value;
    -moz-user-select: $value;
}

@mixin backface-visibility($value) {
    -webkit-backface-visibility: $value;
    -moz-backface-visibility:    $value;
    -ms-backface-visibility:     $value; 
    -webkit-transform-style: preserve-3d;
    -moz-transform-style:    preserve-3d;
    -ms-transform-style:     preserve-3d; 
}

@mixin transform($value) {
    -webkit-transform: $value;
    -moz-transform: $value;
    -ms-transform: $value;
    -o-transform: $value;
    transform: $value;
}

@mixin perspective($value) {
    -webkit-perspective: $value;
    -moz-perspective: $value;
    perspective: $value;
}

@mixin perspective-origin($value) {
    -webkit-perspective-origin: $value;
    -moz-perspective-origin: $value;
    perspective-origin: $value;
}

@mixin animation($value) {
    -ms-animation:     $value;
    -webkit-animation: $value; /* Safari 4+ */
    -moz-animation:    $value; /* Fx 5+ */
    -o-animation:      $value; /* Opera 12+ */
    animation:         $value; /* IE 10+ */
}

@mixin animation-delay($value) {
    -ms-animation-delay:     $value;
    -webkit-animation-delay: $value; /* Safari 4+ */
    -moz-animation-delay:    $value; /* Fx 5+ */
    -o-animation-delay:      $value; /* Opera 12+ */
    animation-delay:         $value; /* IE 10+ */
}

@mixin animation-fill-mode($value) {
    -ms-animation-fill-mode:     $value;
    -webkit-animation-fill-mode: $value; /* Safari 4+ */
    -moz-animation-fill-mode:    $value; /* Fx 5+ */
    -o-animation-fill-mode:      $value; /* Opera 12+ */
    animation-fill-mode:         $value; /* IE 10+ */
}

@mixin opacity($value) {
    /* IE 8 */
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=$value*100))";
    
    /* IE 5-7 */
    filter: alpha(opacity=$value*100);

    -moz-opacity: $value;
    -khtml-opacity: $value;
    opacity: $value;
}

/* Enable image placeholders */
@-moz-document url-prefix(http), url-prefix(file) {
    img:-moz-broken{
        -moz-force-broken-image-icon:1;
    }
}

@mixin keyframes($name) {
    @-webkit-keyframes #{$name} { @content; }
    @-moz-keyframes #{$name} { @content; }
    @-ms-keyframes #{$name} { @content; }
    @keyframes #{$name} { @content; }
}

@mixin pop_frames {
    0%
    {
        opacity: 0;
        @include transform(scale(0));
    }

    50%
    {
        opacity: 0;
        @include transform(scale(.95));
    }

    100% 
    {
        opacity: 1;
        @include transform(scale(1));
    }
}

@include keyframes(pop) {
    @include pop_frames
}

//media queries
$phones: 320px;
$phonesw: 568px;
$medium-screen: 1024px;
@mixin respond-to($media) {
    @if $media == "mobile" {
        @media only screen and (min-width : $phones) and (max-width : $phonesw) { @content; }
    }
    @else if $media == "medium-screen" {
        @media only screen and (min-width : $medium-screen) { @content; }
    }
}
